<bsh>
//packages
import de.fun2code.android.pawserver.AndroidInterface;
import org.json.*;
import android.content.Context;
import android.location.*;
import java.text.SimpleDateFormat;

service = server.props.get("serviceContext");
locationService = service.getSystemService(Context.LOCATION_SERVICE);

criteria = new Criteria();
criteria.setAccuracy(Criteria.ACCURACY_FINE);

provider = locationService.getBestProvider(criteria, true);
location = locationService.getLastKnownLocation(provider);

// gps.py output matching variables
dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSSSSSSZ");

// Network provider as fallback
if (location == null) {
    provider = LocationManager.NETWORK_PROVIDER;
    location = locationService.getLastKnownLocation(provider);
}

json = new JSONObject();
if (location != null) {
    updated = dateFormat.format(location.getTime());
    json.put("Updated", updated);
    
    latitude = location.getLatitude();
    json.put("Latitude", latitude);
    
    longitude = location.getLongitude();
    json.put("Longitude", longitude);
    
    numberOfSatellites = location.getExtras().getInt("satellites");
    json.put("NumSatellites", numberOfSatellites); //could be 0 if using NETWORK_PROVIDER or phone isnt implementing it.
    
    hasAltitude = location.hasAltitude() ? location.getAltitude() : 0;
    json.put("Altitude", hasAltitude);
} else {
    json.put("Warning", "The location data has not been cached yet, please wait for a while");
}
    
request.sendResponse(json.toString().getBytes(), "text/plain");
request.out.flush();
request.out.close();
</bsh>
